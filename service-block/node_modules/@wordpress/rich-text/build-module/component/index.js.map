{"version":3,"sources":["@wordpress/rich-text/src/component/index.js"],"names":["forwardRef","useEffect","useRef","useState","useMemo","useLayoutEffect","BACKSPACE","DELETE","ENTER","LEFT","RIGHT","SPACE","ESCAPE","deprecated","getFilesFromDataTransfer","useMergeRefs","FormatEdit","create","apply","toHTMLString","remove","removeFormat","isCollapsed","LINE_SEPARATOR","indentListItems","getActiveFormats","updateFormats","removeLineSeparator","isEmptyLine","useFormatTypes","useBoundaryStyle","useInlineWarning","insert","slice","getTextContent","INSERTION_INPUT_TYPES_TO_IGNORE","Set","whiteSpace","defaultStyle","EMPTY_ACTIVE_FORMATS","createPrepareEditableTree","fns","value","reduce","accumulator","fn","text","formats","fixPlaceholderSelection","defaultView","selection","getSelection","anchorNode","anchorOffset","nodeType","ELEMENT_NODE","targetNode","childNodes","getAttribute","collapseToStart","RichText","forwardedRef","tagName","TagName","selectionStart","selectionEnd","children","allowedFormats","withoutInteractiveFormatting","placeholder","disabled","preserveWhiteSpace","onPaste","format","onDelete","onEnter","onSelectionChange","onChange","onFocus","unstableOnFocus","setFocusedElement","instanceId","clientId","identifier","multilineTag","__unstableMultilineTag","multilineRootTag","__unstableMultilineRootTag","disableFormats","__unstableDisableFormats","didAutomaticChange","__unstableDidAutomaticChange","inputRule","__unstableInputRule","markAutomaticChange","__unstableMarkAutomaticChange","allowPrefixTransformations","__unstableAllowPrefixTransformations","undo","__unstableUndo","isCaretWithinFormattedText","__unstableIsCaretWithinFormattedText","onEnterFormattedText","__unstableOnEnterFormattedText","onExitFormattedText","__unstableOnExitFormattedText","onCreateUndoLevel","__unstableOnCreateUndoLevel","isSelected","__unstableIsSelected","ref","activeFormats","setActiveFormats","formatTypes","prepareHandlers","valueHandlers","changeHandlers","dependencies","getDoc","current","ownerDocument","getWin","formatToValue","string","Array","length","replacements","prepare","result","html","multilineWrapperTags","undefined","removeEditorOnlyFormats","val","forEach","formatType","__experimentalCreatePrepareEditableTree","name","valueToFormat","_value","record","initialRecord","start","end","createRecord","range","rangeCount","getRangeAt","element","__unstableIsEditableTree","applyRecord","newRecord","domOnly","prepareEditableTree","__unstableDomOnly","handleCopy","event","selectedRecord","plainText","clipboardData","setData","preventDefault","handlePaste","getData","error1","error2","window","console","log","handleChange","transformed","accumlator","__unstablePasteRule","files","isInternal","handleDelete","keyCode","currentValue","isReverse","newValue","handleEnter","shiftKey","handleSpace","altKey","metaKey","ctrlKey","characterBefore","type","handleHorizontalNavigation","currentActiveFormats","collapsed","getComputedStyle","direction","reverseKey","formatsBefore","formatsAfter","newActiveFormatsLength","source","newActiveFormats","newPos","handleKeyDown","defaultPrevented","lastHistoryValue","createUndoLevel","isComposing","timeout","handleInput","inputType","nativeEvent","indexOf","has","oldActiveFormats","change","withoutHistory","clearTimeout","setTimeout","handleCompositionStart","removeEventListener","handleSelectionChange","handleCompositionEnd","addEventListener","didMount","activeElement","oldRecord","Object","values","changeHandler","handlePointerDown","target","textContent","parentNode","index","from","createRange","setStart","setEnd","removeAllRanges","addRange","rafId","handleFocus","requestAnimationFrame","alternative","handleBlur","applyFromProps","cancelAnimationFrame","focus","editableProps","role","style","className","onCopy","onInput","onCompositionStart","onCompositionEnd","onKeyDown","onBlur","onMouseDown","onTouchStart","onKeyUp","onMouseUp","onTouchEnd","contentEditable","suppressContentEditableWarning","editableTagName"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tforwardRef,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n\tuseMemo,\n\tuseLayoutEffect,\n} from '@wordpress/element';\nimport {\n\tBACKSPACE,\n\tDELETE,\n\tENTER,\n\tLEFT,\n\tRIGHT,\n\tSPACE,\n\tESCAPE,\n} from '@wordpress/keycodes';\nimport deprecated from '@wordpress/deprecated';\nimport { getFilesFromDataTransfer } from '@wordpress/dom';\nimport { useMergeRefs } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport FormatEdit from './format-edit';\nimport { create } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { remove } from '../remove';\nimport { removeFormat } from '../remove-format';\nimport { isCollapsed } from '../is-collapsed';\nimport { LINE_SEPARATOR } from '../special-characters';\nimport { indentListItems } from '../indent-list-items';\nimport { getActiveFormats } from '../get-active-formats';\nimport { updateFormats } from '../update-formats';\nimport { removeLineSeparator } from '../remove-line-separator';\nimport { isEmptyLine } from '../is-empty';\nimport { useFormatTypes } from './use-format-types';\nimport { useBoundaryStyle } from './use-boundary-style';\nimport { useInlineWarning } from './use-inline-warning';\nimport { insert } from '../insert';\nimport { slice } from '../slice';\nimport { getTextContent } from '../get-text-content';\n\n/** @typedef {import('@wordpress/element').WPSyntheticEvent} WPSyntheticEvent */\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\n/**\n * In HTML, leading and trailing spaces are not visible, and multiple spaces\n * elsewhere are visually reduced to one space. This rule prevents spaces from\n * collapsing so all space is visible in the editor and can be removed. It also\n * prevents some browsers from inserting non-breaking spaces at the end of a\n * line to prevent the space from visually disappearing. Sometimes these non\n * breaking spaces can linger in the editor causing unwanted non breaking spaces\n * in between words. If also prevent Firefox from inserting a trailing `br` node\n * to visualise any trailing space, causing the element to be saved.\n *\n * > Authors are encouraged to set the 'white-space' property on editing hosts\n * > and on markup that was originally created through these editing mechanisms\n * > to the value 'pre-wrap'. Default HTML whitespace handling is not well\n * > suited to WYSIWYG editing, and line wrapping will not work correctly in\n * > some corner cases if 'white-space' is left at its default value.\n *\n * https://html.spec.whatwg.org/multipage/interaction.html#best-practices-for-in-page-editors\n *\n * @type {string}\n */\nconst whiteSpace = 'pre-wrap';\n\n/**\n * Default style object for the editable element.\n *\n * @type {Object<string,string>}\n */\nconst defaultStyle = { whiteSpace };\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nfunction createPrepareEditableTree( fns ) {\n\treturn ( value ) =>\n\t\tfns.reduce(\n\t\t\t( accumulator, fn ) => fn( accumulator, value.text ),\n\t\t\tvalue.formats\n\t\t);\n}\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n *\n * @param {Window} defaultView\n */\nfunction fixPlaceholderSelection( defaultView ) {\n\tconst selection = defaultView.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.getAttribute( 'data-rich-text-placeholder' )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\nfunction RichText(\n\t{\n\t\ttagName: TagName = 'div',\n\t\tvalue = '',\n\t\tselectionStart,\n\t\tselectionEnd,\n\t\tchildren,\n\t\tallowedFormats,\n\t\twithoutInteractiveFormatting,\n\t\tplaceholder,\n\t\tdisabled,\n\t\tpreserveWhiteSpace,\n\t\tonPaste,\n\t\tformat = 'string',\n\t\tonDelete,\n\t\tonEnter,\n\t\tonSelectionChange,\n\t\tonChange,\n\t\tunstableOnFocus: onFocus,\n\t\tsetFocusedElement,\n\t\tinstanceId,\n\t\tclientId,\n\t\tidentifier,\n\t\t__unstableMultilineTag: multilineTag,\n\t\t__unstableMultilineRootTag: multilineRootTag,\n\t\t__unstableDisableFormats: disableFormats,\n\t\t__unstableDidAutomaticChange: didAutomaticChange,\n\t\t__unstableInputRule: inputRule,\n\t\t__unstableMarkAutomaticChange: markAutomaticChange,\n\t\t__unstableAllowPrefixTransformations: allowPrefixTransformations,\n\t\t__unstableUndo: undo,\n\t\t__unstableIsCaretWithinFormattedText: isCaretWithinFormattedText,\n\t\t__unstableOnEnterFormattedText: onEnterFormattedText,\n\t\t__unstableOnExitFormattedText: onExitFormattedText,\n\t\t__unstableOnCreateUndoLevel: onCreateUndoLevel,\n\t\t__unstableIsSelected: isSelected,\n\t},\n\tforwardedRef\n) {\n\tconst ref = useRef();\n\tconst [ activeFormats = [], setActiveFormats ] = useState();\n\tconst {\n\t\tformatTypes,\n\t\tprepareHandlers,\n\t\tvalueHandlers,\n\t\tchangeHandlers,\n\t\tdependencies,\n\t} = useFormatTypes( {\n\t\tclientId,\n\t\tidentifier,\n\t\twithoutInteractiveFormatting,\n\t\tallowedFormats,\n\t} );\n\n\t// For backward compatibility, fall back to tagName if it's a string.\n\t// tagName can now be a component for light blocks.\n\tif ( ! multilineRootTag && typeof TagName === 'string' ) {\n\t\tmultilineRootTag = TagName;\n\t}\n\n\tfunction getDoc() {\n\t\treturn ref.current.ownerDocument;\n\t}\n\n\tfunction getWin() {\n\t\treturn getDoc().defaultView;\n\t}\n\n\t/**\n\t * Converts the outside data structure to our internal representation.\n\t *\n\t * @param {*} string The outside value, data type depends on props.\n\t *\n\t * @return {Object} An internal rich-text value.\n\t */\n\tfunction formatToValue( string ) {\n\t\tif ( disableFormats ) {\n\t\t\treturn {\n\t\t\t\ttext: string,\n\t\t\t\tformats: Array( string.length ),\n\t\t\t\treplacements: Array( string.length ),\n\t\t\t};\n\t\t}\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn string;\n\t\t}\n\n\t\tconst prepare = createPrepareEditableTree( valueHandlers );\n\n\t\tconst result = create( {\n\t\t\thtml: string,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\tresult.formats = prepare( result );\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Removes editor only formats from the value.\n\t *\n\t * Editor only formats are applied using `prepareEditableTree`, so we need to\n\t * remove them before converting the internal state\n\t *\n\t * @param {Object} val The internal rich-text value.\n\t *\n\t * @return {Object} A new rich-text value.\n\t */\n\tfunction removeEditorOnlyFormats( val ) {\n\t\tformatTypes.forEach( ( formatType ) => {\n\t\t\t// Remove formats created by prepareEditableTree, because they are editor only.\n\t\t\tif ( formatType.__experimentalCreatePrepareEditableTree ) {\n\t\t\t\tval = removeFormat( val, formatType.name, 0, val.text.length );\n\t\t\t}\n\t\t} );\n\n\t\treturn val;\n\t}\n\n\t/**\n\t * Converts the internal value to the external data format.\n\t *\n\t * @param {Object} val The internal rich-text value.\n\t *\n\t * @return {*} The external data format, data type depends on props.\n\t */\n\tfunction valueToFormat( val ) {\n\t\tif ( disableFormats ) {\n\t\t\treturn val.text;\n\t\t}\n\n\t\tval = removeEditorOnlyFormats( val );\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn toHTMLString( { value: val, multilineTag, preserveWhiteSpace } );\n\t}\n\n\t// Internal values are updated synchronously, unlike props and state.\n\tconst _value = useRef( value );\n\tconst record = useRef(\n\t\tuseMemo( () => {\n\t\t\tconst initialRecord = formatToValue( value );\n\t\t\tinitialRecord.start = selectionStart;\n\t\t\tinitialRecord.end = selectionEnd;\n\t\t\treturn initialRecord;\n\t\t}, [] )\n\t);\n\n\tfunction createRecord() {\n\t\tconst selection = getWin().getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: ref.current,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t__unstableIsEditableTree: true,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\tfunction applyRecord( newRecord, { domOnly } = {} ) {\n\t\tapply( {\n\t\t\tvalue: newRecord,\n\t\t\tcurrent: ref.current,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tprepareEditableTree: createPrepareEditableTree( prepareHandlers ),\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder,\n\t\t} );\n\t}\n\n\tfunction handleCopy( event ) {\n\t\tif ( isCollapsed( record.current ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectedRecord = slice( record.current );\n\t\tconst plainText = getTextContent( selectedRecord );\n\t\tconst html = toHTMLString( {\n\t\t\tvalue: selectedRecord,\n\t\t\tmultilineTag,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t\tevent.clipboardData.setData( 'text/plain', plainText );\n\t\tevent.clipboardData.setData( 'text/html', html );\n\t\tevent.clipboardData.setData( 'rich-text', 'true' );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Handles a paste event.\n\t *\n\t * Saves the pasted data as plain text in `pastedPlainText`.\n\t *\n\t * @param {ClipboardEvent} event The paste event.\n\t */\n\tfunction handlePaste( event ) {\n\t\tif ( ! isSelected ) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst { clipboardData } = event;\n\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\tif ( disableFormats ) {\n\t\t\thandleChange( insert( record.current, plainText ) );\n\t\t\treturn;\n\t\t}\n\n\t\tconst transformed = formatTypes.reduce(\n\t\t\t( accumlator, { __unstablePasteRule } ) => {\n\t\t\t\t// Only allow one transform.\n\t\t\t\tif ( __unstablePasteRule && accumlator === record.current ) {\n\t\t\t\t\taccumlator = __unstablePasteRule( record.current, {\n\t\t\t\t\t\thtml,\n\t\t\t\t\t\tplainText,\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn accumlator;\n\t\t\t},\n\t\t\trecord.current\n\t\t);\n\n\t\tif ( transformed !== record.current ) {\n\t\t\thandleChange( transformed );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( onPaste ) {\n\t\t\tconst files = getFilesFromDataTransfer( clipboardData );\n\t\t\tconst isInternal = clipboardData.getData( 'rich-text' ) === 'true';\n\n\t\t\tonPaste( {\n\t\t\t\tvalue: removeEditorOnlyFormats( record.current ),\n\t\t\t\tonChange: handleChange,\n\t\t\t\thtml,\n\t\t\t\tplainText,\n\t\t\t\tisInternal,\n\t\t\t\tfiles: [ ...files ],\n\t\t\t\tactiveFormats,\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Handles delete on keydown:\n\t * - outdent list items,\n\t * - delete content if everything is selected,\n\t * - trigger the onDelete prop when selection is uncollapsed and at an edge.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\tfunction handleDelete( event ) {\n\t\tconst { keyCode } = event;\n\n\t\tif (\n\t\t\tkeyCode !== DELETE &&\n\t\t\tkeyCode !== BACKSPACE &&\n\t\t\tkeyCode !== ESCAPE\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( didAutomaticChange ) {\n\t\t\tevent.preventDefault();\n\t\t\tundo();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( keyCode === ESCAPE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentValue = createRecord();\n\t\tconst { start, end, text } = currentValue;\n\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\t// Always handle full content deletion ourselves.\n\t\tif ( start === 0 && end !== 0 && end === text.length ) {\n\t\t\thandleChange( remove( currentValue ) );\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( multilineTag ) {\n\t\t\tlet newValue;\n\n\t\t\t// Check to see if we should remove the first item if empty.\n\t\t\tif (\n\t\t\t\tisReverse &&\n\t\t\t\tcurrentValue.start === 0 &&\n\t\t\t\tcurrentValue.end === 0 &&\n\t\t\t\tisEmptyLine( currentValue )\n\t\t\t) {\n\t\t\t\tnewValue = removeLineSeparator( currentValue, ! isReverse );\n\t\t\t} else {\n\t\t\t\tnewValue = removeLineSeparator( currentValue, isReverse );\n\t\t\t}\n\n\t\t\tif ( newValue ) {\n\t\t\t\thandleChange( newValue );\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Only process delete if the key press occurs at an uncollapsed edge.\n\t\tif (\n\t\t\t! onDelete ||\n\t\t\t! isCollapsed( currentValue ) ||\n\t\t\tactiveFormats.length ||\n\t\t\t( isReverse && start !== 0 ) ||\n\t\t\t( ! isReverse && end !== text.length )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tonDelete( { isReverse, value: currentValue } );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Triggers the `onEnter` prop on keydown.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\tfunction handleEnter( event ) {\n\t\tif ( event.keyCode !== ENTER ) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tif ( ! onEnter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonEnter( {\n\t\t\tvalue: removeEditorOnlyFormats( createRecord() ),\n\t\t\tonChange: handleChange,\n\t\t\tshiftKey: event.shiftKey,\n\t\t} );\n\t}\n\n\t/**\n\t * Indents list items on space keydown.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\tfunction handleSpace( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override when no modifiers are pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\tkeyCode !== SPACE ||\n\t\t\tmultilineTag !== 'li'\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentValue = createRecord();\n\n\t\tif ( ! isCollapsed( currentValue ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { text, start } = currentValue;\n\t\tconst characterBefore = text[ start - 1 ];\n\n\t\t// The caret must be at the start of a line.\n\t\tif ( characterBefore && characterBefore !== LINE_SEPARATOR ) {\n\t\t\treturn;\n\t\t}\n\n\t\thandleChange(\n\t\t\tindentListItems( currentValue, { type: multilineRootTag } )\n\t\t);\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Handles horizontal keyboard navigation when no modifiers are pressed. The\n\t * navigation is handled separately to move correctly around format\n\t * boundaries.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\tfunction handleHorizontalNavigation( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\ttext,\n\t\t\tformats,\n\t\t\tstart,\n\t\t\tend,\n\t\t\tactiveFormats: currentActiveFormats = [],\n\t\t} = record.current;\n\t\tconst collapsed = isCollapsed( record.current );\n\t\t// To do: ideally, we should look at visual position instead.\n\t\tconst { direction } = getWin().getComputedStyle( ref.current );\n\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t// navigating backward.\n\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t// navigating forward.\n\t\tif ( collapsed && currentActiveFormats.length === 0 ) {\n\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t// the selection for now. Later we could expand this logic to set\n\t\t// boundary positions if needed.\n\t\tif ( ! collapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In all other cases, prevent default behaviour.\n\t\tevent.preventDefault();\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\n\t\tlet newActiveFormatsLength = currentActiveFormats.length;\n\t\tlet source = formatsAfter;\n\n\t\tif ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tsource = formatsBefore;\n\t\t}\n\n\t\t// If the amount of formats before the caret and after the caret is\n\t\t// different, the caret is at a format boundary.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\tif (\n\t\t\t\t! isReverse &&\n\t\t\t\tcurrentActiveFormats.length < formatsAfter.length\n\t\t\t) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tisReverse &&\n\t\t\t\tcurrentActiveFormats.length > formatsBefore.length\n\t\t\t) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\t\t} else if ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tif (\n\t\t\t\t! isReverse &&\n\t\t\t\tcurrentActiveFormats.length > formatsAfter.length\n\t\t\t) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tisReverse &&\n\t\t\t\tcurrentActiveFormats.length < formatsBefore.length\n\t\t\t) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\t\t}\n\n\t\tif ( newActiveFormatsLength !== currentActiveFormats.length ) {\n\t\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\t\tconst newValue = {\n\t\t\t\t...record.current,\n\t\t\t\tactiveFormats: newActiveFormats,\n\t\t\t};\n\t\t\trecord.current = newValue;\n\t\t\tapplyRecord( newValue );\n\t\t\tsetActiveFormats( newActiveFormats );\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPos = start + ( isReverse ? -1 : 1 );\n\t\tconst newActiveFormats = isReverse ? formatsBefore : formatsAfter;\n\t\tconst newValue = {\n\t\t\t...record.current,\n\t\t\tstart: newPos,\n\t\t\tend: newPos,\n\t\t\tactiveFormats: newActiveFormats,\n\t\t};\n\n\t\trecord.current = newValue;\n\t\tapplyRecord( newValue );\n\t\tonSelectionChange( newPos, newPos );\n\t\tsetActiveFormats( newActiveFormats );\n\t}\n\n\tfunction handleKeyDown( event ) {\n\t\tif ( event.defaultPrevented ) {\n\t\t\treturn;\n\t\t}\n\n\t\thandleDelete( event );\n\t\thandleEnter( event );\n\t\thandleSpace( event );\n\t\thandleHorizontalNavigation( event );\n\t}\n\n\tconst lastHistoryValue = useRef( value );\n\n\tfunction createUndoLevel() {\n\t\t// If the content is the same, no level needs to be created.\n\t\tif ( lastHistoryValue.current === _value.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonCreateUndoLevel();\n\t\tlastHistoryValue.current = _value.current;\n\t}\n\n\tconst isComposing = useRef( false );\n\tconst timeout = useRef();\n\n\t/**\n\t * Handle input on the next selection change event.\n\t *\n\t * @param {WPSyntheticEvent} event Synthetic input event.\n\t */\n\tfunction handleInput( event ) {\n\t\t// Do not trigger a change if characters are being composed. Browsers\n\t\t// will usually emit a final `input` event when the characters are\n\t\t// composed.\n\t\t// As of December 2019, Safari doesn't support nativeEvent.isComposing.\n\t\tif ( isComposing.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet inputType;\n\n\t\tif ( event ) {\n\t\t\tinputType = event.inputType;\n\t\t}\n\n\t\tif ( ! inputType && event && event.nativeEvent ) {\n\t\t\tinputType = event.nativeEvent.inputType;\n\t\t}\n\n\t\t// The browser formatted something or tried to insert HTML.\n\t\t// Overwrite it. It will be handled later by the format library if\n\t\t// needed.\n\t\tif (\n\t\t\tinputType &&\n\t\t\t( inputType.indexOf( 'format' ) === 0 ||\n\t\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType ) )\n\t\t) {\n\t\t\tapplyRecord( record.current );\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentValue = createRecord();\n\t\tconst { start, activeFormats: oldActiveFormats = [] } = record.current;\n\n\t\t// Update the formats between the last and new caret position.\n\t\tconst change = updateFormats( {\n\t\t\tvalue: currentValue,\n\t\t\tstart,\n\t\t\tend: currentValue.start,\n\t\t\tformats: oldActiveFormats,\n\t\t} );\n\n\t\thandleChange( change, { withoutHistory: true } );\n\n\t\t// Create an undo level when input stops for over a second.\n\t\tgetWin().clearTimeout( timeout.current );\n\t\ttimeout.current = getWin().setTimeout( createUndoLevel, 1000 );\n\n\t\t// Only run input rules when inserting text.\n\t\tif ( inputType !== 'insertText' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( allowPrefixTransformations && inputRule ) {\n\t\t\tinputRule( change, valueToFormat );\n\t\t}\n\n\t\tconst transformed = formatTypes.reduce(\n\t\t\t( accumlator, { __unstableInputRule } ) => {\n\t\t\t\tif ( __unstableInputRule ) {\n\t\t\t\t\taccumlator = __unstableInputRule( accumlator );\n\t\t\t\t}\n\n\t\t\t\treturn accumlator;\n\t\t\t},\n\t\t\tchange\n\t\t);\n\n\t\tif ( transformed !== change ) {\n\t\t\tcreateUndoLevel();\n\t\t\thandleChange( { ...transformed, activeFormats: oldActiveFormats } );\n\t\t\tmarkAutomaticChange();\n\t\t}\n\t}\n\n\tfunction handleCompositionStart() {\n\t\tisComposing.current = true;\n\t\t// Do not update the selection when characters are being composed as\n\t\t// this rerenders the component and might distroy internal browser\n\t\t// editing state.\n\t\tgetDoc().removeEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t}\n\n\tfunction handleCompositionEnd() {\n\t\tisComposing.current = false;\n\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t// input event after composition.\n\t\thandleInput( { inputType: 'insertText' } );\n\t\t// Tracking selection changes can be resumed.\n\t\tgetDoc().addEventListener( 'selectionchange', handleSelectionChange );\n\t}\n\n\tconst didMount = useRef( false );\n\n\t/**\n\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t * native events, `keyup`, `mouseup` and `touchend` synthetic events, and\n\t * animation frames after the `focus` event.\n\t *\n\t * @param {Event|WPSyntheticEvent|DOMHighResTimeStamp} event\n\t */\n\tfunction handleSelectionChange( event ) {\n\t\tif ( ! ref.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ref.current.ownerDocument.activeElement !== ref.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( event.type !== 'selectionchange' && ! isSelected ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( disabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case of a keyboard event, ignore selection changes during\n\t\t// composition.\n\t\tif ( isComposing.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end, text } = createRecord();\n\t\tconst oldRecord = record.current;\n\n\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t// Any input results in a selection change.\n\t\tif ( text !== oldRecord.text ) {\n\t\t\thandleInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( start === oldRecord.start && end === oldRecord.end ) {\n\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t// the caret before the placeholder if that's the case.\n\t\t\tif ( oldRecord.text.length === 0 && start === 0 ) {\n\t\t\t\tfixPlaceholderSelection( getWin() );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValue = {\n\t\t\t...oldRecord,\n\t\t\tstart,\n\t\t\tend,\n\t\t\t// Allow `getActiveFormats` to get new `activeFormats`.\n\t\t\tactiveFormats: undefined,\n\t\t};\n\n\t\tconst newActiveFormats = getActiveFormats(\n\t\t\tnewValue,\n\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t);\n\n\t\t// Update the value with the new active formats.\n\t\tnewValue.activeFormats = newActiveFormats;\n\n\t\tif ( ! isCaretWithinFormattedText && newActiveFormats.length ) {\n\t\t\tonEnterFormattedText();\n\t\t} else if ( isCaretWithinFormattedText && ! newActiveFormats.length ) {\n\t\t\tonExitFormattedText();\n\t\t}\n\n\t\t// It is important that the internal value is updated first,\n\t\t// otherwise the value will be wrong on render!\n\t\trecord.current = newValue;\n\t\tapplyRecord( newValue, { domOnly: true } );\n\t\tonSelectionChange( start, end );\n\t\tsetActiveFormats( newActiveFormats );\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object}  newRecord         The record to sync and apply.\n\t * @param {Object}  $2                Named options.\n\t * @param {boolean} $2.withoutHistory If true, no undo level will be\n\t *                                    created.\n\t */\n\tfunction handleChange( newRecord, { withoutHistory } = {} ) {\n\t\tif ( disableFormats ) {\n\t\t\tnewRecord.formats = Array( newRecord.text.length );\n\t\t\tnewRecord.replacements = Array( newRecord.text.length );\n\t\t}\n\n\t\tapplyRecord( newRecord );\n\n\t\tconst { start, end, activeFormats: newActiveFormats = [] } = newRecord;\n\n\t\tObject.values( changeHandlers ).forEach( ( changeHandler ) => {\n\t\t\tchangeHandler( newRecord.formats, newRecord.text );\n\t\t} );\n\n\t\t_value.current = valueToFormat( newRecord );\n\t\trecord.current = newRecord;\n\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\tonSelectionChange( start, end );\n\t\tonChange( _value.current );\n\t\tsetActiveFormats( newActiveFormats );\n\n\t\tif ( ! withoutHistory ) {\n\t\t\tcreateUndoLevel();\n\t\t}\n\t}\n\n\t/**\n\t * Select object when they are clicked. The browser will not set any\n\t * selection when clicking e.g. an image.\n\t *\n\t * @param {WPSyntheticEvent} event Synthetic mousedown or touchstart event.\n\t */\n\tfunction handlePointerDown( event ) {\n\t\tconst { target } = event;\n\n\t\t// If the child element has no text content, it must be an object.\n\t\tif ( target === ref.current || target.textContent ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { parentNode } = target;\n\t\tconst index = Array.from( parentNode.childNodes ).indexOf( target );\n\t\tconst range = getDoc().createRange();\n\t\tconst selection = getWin().getSelection();\n\n\t\trange.setStart( target.parentNode, index );\n\t\trange.setEnd( target.parentNode, index + 1 );\n\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\t}\n\n\tconst rafId = useRef();\n\n\t/**\n\t * Handles a focus event on the contenteditable field, calling the\n\t * `unstableOnFocus` prop callback if one is defined. The callback does not\n\t * receive any arguments.\n\t *\n\t * This is marked as a private API and the `unstableOnFocus` prop is not\n\t * documented, as the current requirements where it is used are subject to\n\t * future refactoring following `isSelected` handling.\n\t *\n\t * In contrast with `setFocusedElement`, this is only triggered in response\n\t * to focus within the contenteditable field, whereas `setFocusedElement`\n\t * is triggered on focus within any `RichText` descendent element.\n\t *\n\t * @see setFocusedElement\n\t *\n\t * @private\n\t */\n\tfunction handleFocus() {\n\t\tif ( onFocus ) {\n\t\t\tonFocus();\n\t\t}\n\n\t\tif ( ! isSelected ) {\n\t\t\t// We know for certain that on focus, the old selection is invalid.\n\t\t\t// It will be recalculated on the next mouseup, keyup, or touchend\n\t\t\t// event.\n\t\t\tconst index = undefined;\n\n\t\t\trecord.current = {\n\t\t\t\t...record.current,\n\t\t\t\tstart: index,\n\t\t\t\tend: index,\n\t\t\t\tactiveFormats: EMPTY_ACTIVE_FORMATS,\n\t\t\t};\n\t\t\tonSelectionChange( index, index );\n\t\t\tsetActiveFormats( EMPTY_ACTIVE_FORMATS );\n\t\t} else {\n\t\t\tonSelectionChange( record.current.start, record.current.end );\n\t\t\tsetActiveFormats(\n\t\t\t\tgetActiveFormats(\n\t\t\t\t\t{\n\t\t\t\t\t\t...record.current,\n\t\t\t\t\t\tactiveFormats: undefined,\n\t\t\t\t\t},\n\t\t\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t// Update selection as soon as possible, which is at the next animation\n\t\t// frame. The event listener for selection changes may be added too late\n\t\t// at this point, but this focus event is still too early to calculate\n\t\t// the selection.\n\t\trafId.current = getWin().requestAnimationFrame( handleSelectionChange );\n\n\t\tgetDoc().addEventListener( 'selectionchange', handleSelectionChange );\n\n\t\tif ( setFocusedElement ) {\n\t\t\tdeprecated( 'wp.blockEditor.RichText setFocusedElement prop', {\n\t\t\t\talternative: 'selection state from the block editor store.',\n\t\t\t} );\n\t\t\tsetFocusedElement( instanceId );\n\t\t}\n\t}\n\n\tfunction handleBlur() {\n\t\tgetDoc().removeEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t}\n\n\tfunction applyFromProps() {\n\t\t_value.current = value;\n\t\trecord.current = formatToValue( value );\n\t\trecord.current.start = selectionStart;\n\t\trecord.current.end = selectionEnd;\n\t\tapplyRecord( record.current );\n\t}\n\n\tuseEffect( () => {\n\t\tif ( didMount.current ) {\n\t\t\tapplyFromProps();\n\t\t}\n\t}, [ TagName, placeholder ] );\n\n\tuseEffect( () => {\n\t\tif ( didMount.current && value !== _value.current ) {\n\t\t\tapplyFromProps();\n\t\t}\n\t}, [ value ] );\n\n\tuseEffect( () => {\n\t\tif ( ! didMount.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tisSelected &&\n\t\t\t( selectionStart !== record.current.start ||\n\t\t\t\tselectionEnd !== record.current.end )\n\t\t) {\n\t\t\tapplyFromProps();\n\t\t} else {\n\t\t\trecord.current = {\n\t\t\t\t...record.current,\n\t\t\t\tstart: selectionStart,\n\t\t\t\tend: selectionEnd,\n\t\t\t};\n\t\t}\n\t}, [ selectionStart, selectionEnd, isSelected ] );\n\n\tuseEffect( () => {\n\t\tif ( didMount.current ) {\n\t\t\tapplyFromProps();\n\t\t}\n\t}, dependencies );\n\n\tuseLayoutEffect( () => {\n\t\tapplyRecord( record.current, { domOnly: true } );\n\n\t\tdidMount.current = true;\n\n\t\treturn () => {\n\t\t\tgetDoc().removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t\tgetWin().cancelAnimationFrame( rafId.current );\n\t\t\tgetWin().clearTimeout( timeout.current );\n\t\t};\n\t}, [] );\n\n\tfunction focus() {\n\t\tref.current.focus();\n\t\tapplyRecord( record.current );\n\t}\n\n\tconst editableProps = {\n\t\t// Overridable props.\n\t\trole: 'textbox',\n\t\t'aria-multiline': true,\n\t\t'aria-label': placeholder,\n\t\tref: useMergeRefs( [ forwardedRef, ref ] ),\n\t\tstyle: defaultStyle,\n\t\tclassName: 'rich-text',\n\t\tonCopy: handleCopy,\n\t\tonPaste: handlePaste,\n\t\tonInput: handleInput,\n\t\tonCompositionStart: handleCompositionStart,\n\t\tonCompositionEnd: handleCompositionEnd,\n\t\tonKeyDown: handleKeyDown,\n\t\tonFocus: handleFocus,\n\t\tonBlur: handleBlur,\n\t\tonMouseDown: handlePointerDown,\n\t\tonTouchStart: handlePointerDown,\n\t\t// Selection updates must be done at these events as they\n\t\t// happen before the `selectionchange` event. In some cases,\n\t\t// the `selectionchange` event may not even fire, for\n\t\t// example when the window receives focus again on click.\n\t\tonKeyUp: handleSelectionChange,\n\t\tonMouseUp: handleSelectionChange,\n\t\tonTouchEnd: handleSelectionChange,\n\t\t// Do not set the attribute if disabled.\n\t\tcontentEditable: disabled ? undefined : true,\n\t\tsuppressContentEditableWarning: ! disabled,\n\t};\n\n\tuseBoundaryStyle( { ref, activeFormats } );\n\tuseInlineWarning( { ref } );\n\n\treturn (\n\t\t<>\n\t\t\t{ isSelected && (\n\t\t\t\t<FormatEdit\n\t\t\t\t\tvalue={ record.current }\n\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\tonFocus={ focus }\n\t\t\t\t\tformatTypes={ formatTypes }\n\t\t\t\t\tforwardedRef={ ref }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ children &&\n\t\t\t\tchildren( {\n\t\t\t\t\tisSelected,\n\t\t\t\t\tvalue: record.current,\n\t\t\t\t\tonChange: handleChange,\n\t\t\t\t\tonFocus: focus,\n\t\t\t\t\teditableProps,\n\t\t\t\t\teditableTagName: TagName,\n\t\t\t\t} ) }\n\t\t\t{ ! children && <TagName { ...editableProps } /> }\n\t\t</>\n\t);\n}\n\n/**\n * Renders a rich content input, providing users with the option to format the\n * content.\n */\nexport default forwardRef( RichText );\n"]}