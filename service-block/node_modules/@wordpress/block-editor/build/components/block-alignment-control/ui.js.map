{"version":3,"sources":["@wordpress/block-editor/src/components/block-alignment-control/ui.js"],"names":["BLOCK_ALIGNMENTS_CONTROLS","left","icon","positionLeft","title","center","positionCenter","right","positionRight","wide","stretchWide","full","stretchFullWidth","DEFAULT_CONTROLS","DEFAULT_CONTROL","WIDE_CONTROLS","POPOVER_PROPS","isAlternate","BlockAlignmentUI","value","onChange","controls","isToolbar","isCollapsed","isToolbarButton","select","blockEditorStore","getSettings","settings","wideControlsEnabled","alignWide","layout","supportsAlignments","type","alignments","availableAlignments","enabledControls","filter","control","includes","length","applyOrUnset","align","undefined","activeAlignmentControl","defaultAlignmentControl","UIComponent","ToolbarGroup","DropdownMenu","extraProps","describedBy","map","isActive","role","onClick"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { DropdownMenu, ToolbarGroup } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport {\n\tpositionCenter,\n\tpositionLeft,\n\tpositionRight,\n\tstretchFullWidth,\n\tstretchWide,\n} from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { useLayout } from '../inner-blocks/layout';\nimport { store as blockEditorStore } from '../../store';\n\nconst BLOCK_ALIGNMENTS_CONTROLS = {\n\tleft: {\n\t\ticon: positionLeft,\n\t\ttitle: __( 'Align left' ),\n\t},\n\tcenter: {\n\t\ticon: positionCenter,\n\t\ttitle: __( 'Align center' ),\n\t},\n\tright: {\n\t\ticon: positionRight,\n\t\ttitle: __( 'Align right' ),\n\t},\n\twide: {\n\t\ticon: stretchWide,\n\t\ttitle: __( 'Wide width' ),\n\t},\n\tfull: {\n\t\ticon: stretchFullWidth,\n\t\ttitle: __( 'Full width' ),\n\t},\n};\n\nconst DEFAULT_CONTROLS = [ 'left', 'center', 'right', 'wide', 'full' ];\nconst DEFAULT_CONTROL = 'center';\nconst WIDE_CONTROLS = [ 'wide', 'full' ];\n\nconst POPOVER_PROPS = {\n\tisAlternate: true,\n};\n\nfunction BlockAlignmentUI( {\n\tvalue,\n\tonChange,\n\tcontrols = DEFAULT_CONTROLS,\n\tisToolbar,\n\tisCollapsed = true,\n\tisToolbarButton = true,\n} ) {\n\tconst { wideControlsEnabled = false } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\tconst settings = getSettings();\n\t\treturn {\n\t\t\twideControlsEnabled: settings.alignWide,\n\t\t};\n\t}, [] );\n\tconst layout = useLayout();\n\tconst supportsAlignments = layout.type === 'default';\n\n\tif ( ! supportsAlignments ) {\n\t\treturn null;\n\t}\n\n\tconst { alignments: availableAlignments = DEFAULT_CONTROLS } = layout;\n\tconst enabledControls = controls.filter(\n\t\t( control ) =>\n\t\t\t( wideControlsEnabled || ! WIDE_CONTROLS.includes( control ) ) &&\n\t\t\tavailableAlignments.includes( control )\n\t);\n\n\tif ( enabledControls.length === 0 ) {\n\t\treturn null;\n\t}\n\n\tfunction applyOrUnset( align ) {\n\t\treturn () => onChange( value === align ? undefined : align );\n\t}\n\n\tconst activeAlignmentControl = BLOCK_ALIGNMENTS_CONTROLS[ value ];\n\tconst defaultAlignmentControl =\n\t\tBLOCK_ALIGNMENTS_CONTROLS[ DEFAULT_CONTROL ];\n\n\tconst UIComponent = isToolbar ? ToolbarGroup : DropdownMenu;\n\tconst extraProps = isToolbar ? { isCollapsed } : { isToolbarButton };\n\n\treturn (\n\t\t<UIComponent\n\t\t\tpopoverProps={ POPOVER_PROPS }\n\t\t\ticon={\n\t\t\t\tactiveAlignmentControl\n\t\t\t\t\t? activeAlignmentControl.icon\n\t\t\t\t\t: defaultAlignmentControl.icon\n\t\t\t}\n\t\t\tlabel={ __( 'Align' ) }\n\t\t\ttoggleProps={ { describedBy: __( 'Change alignment' ) } }\n\t\t\tcontrols={ enabledControls.map( ( control ) => {\n\t\t\t\treturn {\n\t\t\t\t\t...BLOCK_ALIGNMENTS_CONTROLS[ control ],\n\t\t\t\t\tisActive: value === control,\n\t\t\t\t\trole: isCollapsed ? 'menuitemradio' : undefined,\n\t\t\t\t\tonClick: applyOrUnset( control ),\n\t\t\t\t};\n\t\t\t} ) }\n\t\t\t{ ...extraProps }\n\t\t/>\n\t);\n}\n\nexport default BlockAlignmentUI;\n"]}