{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/menu.native.js"],"names":["useEffect","useCallback","useSelect","useDispatch","createBlock","rawHandler","store","blocksStore","getClipboard","InserterSearchResults","blockEditorStore","InserterMenu","onSelect","onDismiss","rootClientId","clientId","isAppender","shouldReplaceBlock","insertionIndex","showInsertionPoint","hideInsertionPoint","clearSelectedBlock","insertBlock","removeBlock","resetBlocks","insertDefaultBlock","select","getInserterItems","getBlockRootClientId","getBlockSelectionEnd","selectBlockEditorStore","targetRootClientId","end","undefined","items","destinationRootClientId","getBlockOrder","getBlockCount","canInsertBlockType","getBlockType","count","blockToReplace","onClose","onInsert","item","name","initialAttributes","innerBlocks","newBlock","getItems","itemsToDisplay","filter","clipboard","clipboardBlock","HTML","canAddClipboardBlock","icon","attributes","id"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEffect, useCallback } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tcreateBlock,\n\trawHandler,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { getClipboard } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\n\nimport InserterSearchResults from './search-results';\nimport { store as blockEditorStore } from '../../store';\n\nfunction InserterMenu( {\n\tonSelect,\n\tonDismiss,\n\trootClientId,\n\tclientId,\n\tisAppender,\n\tshouldReplaceBlock,\n\tinsertionIndex,\n} ) {\n\tconst {\n\t\tshowInsertionPoint,\n\t\thideInsertionPoint,\n\t\tclearSelectedBlock,\n\t\tinsertBlock,\n\t\tremoveBlock,\n\t\tresetBlocks,\n\t\tinsertDefaultBlock,\n\t} = useDispatch( blockEditorStore );\n\n\tconst {\n\t\titems,\n\t\tdestinationRootClientId,\n\t\tgetBlockOrder,\n\t\tgetBlockCount,\n\t\tcanInsertBlockType,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetInserterItems,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlockSelectionEnd,\n\t\t\t...selectBlockEditorStore\n\t\t} = select( blockEditorStore );\n\n\t\tlet targetRootClientId = rootClientId;\n\t\tif ( ! targetRootClientId && ! clientId && ! isAppender ) {\n\t\t\tconst end = getBlockSelectionEnd();\n\t\t\tif ( end ) {\n\t\t\t\ttargetRootClientId = getBlockRootClientId( end ) || undefined;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\titems: getInserterItems( targetRootClientId ),\n\t\t\tdestinationRootClientId: targetRootClientId,\n\t\t\tgetBlockOrder: selectBlockEditorStore.getBlockOrder,\n\t\t\tgetBlockCount: selectBlockEditorStore.getBlockCount,\n\t\t\tcanInsertBlockType: selectBlockEditorStore.canInsertBlockType,\n\t\t};\n\t} );\n\n\tconst { getBlockType } = useSelect( ( select ) => select( blocksStore ) );\n\n\tuseEffect( () => {\n\t\tif ( shouldReplaceBlock ) {\n\t\t\tconst count = getBlockCount();\n\t\t\t// Check if there is a rootClientId because that means it is a nested replaceable block\n\t\t\t// and we don't want to clear/reset all blocks.\n\t\t\tif ( count === 1 && ! rootClientId ) {\n\t\t\t\t// Removing the last block is not possilble with `removeBlock` action.\n\t\t\t\t// It always inserts a default block if the last of the blocks have been removed.\n\t\t\t\tclearSelectedBlock();\n\t\t\t\tresetBlocks( [] );\n\t\t\t} else {\n\t\t\t\tconst blockToReplace = getBlockOrder( destinationRootClientId )[\n\t\t\t\t\tinsertionIndex\n\t\t\t\t];\n\t\t\t\tremoveBlock( blockToReplace, false );\n\t\t\t}\n\t\t}\n\t\t// Show/Hide insertion point on Mount/Dismount\n\t\tshowInsertionPoint( destinationRootClientId, insertionIndex );\n\t\treturn hideInsertionPoint;\n\t}, [] );\n\n\tconst onClose = useCallback( () => {\n\t\t// If should replace but didn't insert any block\n\t\t// re-insert default block.\n\t\tif ( shouldReplaceBlock ) {\n\t\t\tinsertDefaultBlock( {}, destinationRootClientId, insertionIndex );\n\t\t}\n\t\tonDismiss();\n\t}, [ shouldReplaceBlock, destinationRootClientId, insertionIndex ] );\n\n\tconst onInsert = useCallback(\n\t\t( item ) => {\n\t\t\tconst { name, initialAttributes, innerBlocks } = item;\n\n\t\t\tconst newBlock = createBlock(\n\t\t\t\tname,\n\t\t\t\tinitialAttributes,\n\t\t\t\tinnerBlocks\n\t\t\t);\n\n\t\t\tinsertBlock( newBlock, insertionIndex, destinationRootClientId );\n\t\t},\n\t\t[ insertBlock, destinationRootClientId, insertionIndex ]\n\t);\n\n\t/**\n\t * Processes the inserter items to check\n\t * if there's any copied block in the clipboard\n\t * to add it as an extra item\n\t */\n\tfunction getItems() {\n\t\t// Filter out reusable blocks (they will be added in another tab)\n\t\tconst itemsToDisplay = items.filter(\n\t\t\t( { name } ) => name !== 'core/block'\n\t\t);\n\n\t\tconst clipboard = getClipboard();\n\t\tlet clipboardBlock = rawHandler( { HTML: clipboard } )[ 0 ];\n\n\t\tconst canAddClipboardBlock = canInsertBlockType(\n\t\t\tclipboardBlock?.name,\n\t\t\tdestinationRootClientId\n\t\t);\n\n\t\tif ( ! canAddClipboardBlock ) {\n\t\t\treturn itemsToDisplay;\n\t\t}\n\n\t\tconst { icon, name } = getBlockType( clipboardBlock.name );\n\t\tconst { attributes: initialAttributes, innerBlocks } = clipboardBlock;\n\n\t\tclipboardBlock = {\n\t\t\tid: 'clipboard',\n\t\t\tname,\n\t\t\ticon,\n\t\t\tinitialAttributes,\n\t\t\tinnerBlocks,\n\t\t};\n\n\t\treturn [ clipboardBlock, ...itemsToDisplay ];\n\t}\n\n\treturn (\n\t\t<InserterSearchResults\n\t\t\tonClose={ onClose }\n\t\t\titems={ getItems() }\n\t\t\tonSelect={ ( item ) => {\n\t\t\t\tonInsert( item );\n\t\t\t\tonSelect( item );\n\t\t\t} }\n\t\t/>\n\t);\n}\n\nexport default InserterMenu;\n"]}